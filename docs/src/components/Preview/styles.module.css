.preview {
    display: flex;
    flex-direction: column;
    gap: var(--ifm-pre-padding);
    padding: var(--ifm-pre-padding);
}

.previewSection {
    position: relative;
    --bar-offset: -0.25rem;
    --bar-padding: 0.2rem 1rem;
    --bar-background-color: var(--preview-background-color);
    --bar-border-color: var(--preview-border-color);
    --bar-color: var(--preview-color);
    --bar-font: 0.75rem / var(--ifm-pre-line-height) var(--ifm-font-family-monospace);
    --body-padding: 2rem 1rem 1rem;
    --body-background-color: var(--code-background);
    --body-border-color: var(--bar-border-color);
    --body-font: 0.875rem / var(--ifm-pre-line-height) var(--ifm-font-family-monospace);
}

.miniPreviewSection {
    --bar-padding: 0.125rem 0.625rem;
    --body-padding: 1.625rem 0.625rem 0.625rem;
    --bar-font: 0.6875rem / var(--ifm-pre-line-height) var(--ifm-font-family-monospace);
    --body-font: 0.75rem / var(--ifm-pre-line-height) var(--ifm-font-family-monospace);
}

.previewSectionBar {
    position: absolute;
    top: var(--bar-offset);
    left: var(--bar-offset);
    padding: var(--bar-padding);
    font: var(--bar-font);

    border: 1px solid var(--bar-border-color);
    background-color: var(--bar-background-color);
    border-radius: var(--ifm-global-radius);
    color: var(--bar-color);

    display: flex;
    align-items: center;
}

.previewSectionBody {
    font: var(--body-font);
    padding: var(--body-padding);
    margin: 0;
    border: 1px solid var(--body-border-color);
    border-radius: var(--ifm-global-radius);
    background-color: var(--body-background-color);
    scrollbar-width: thin;
}

.errorPreviewSection {
    --bar-background-color: var(--ifm-color-danger);
    --bar-border-color: var(--ifm-color-danger-darker);
    --bar-color: var(--ifm-color-white);
}

.renderErrorsAndWarningsPreviewSection {
    --bar-background-color: var(--ifm-color-warning-contrast-background);
    --bar-border-color: var(--ifm-color-warning-darker);
    --bar-color: var(--ifm-color-warning-contrast-foreground);

    dt:not(:first-of-type) {
        margin-top: 0.75rem;
    }

    dd {
        margin-inline-start: 1.75rem;
        margin-top: 0.375rem;
        white-space: break-spaces;
    }

    .logTypeIcon {
        margin-right: 0.25rem;
    }

    .logSummary {
        font-size: 0.875rem;
    }

    .logDetails {
        display: block;
        font-size: 0.75rem;
    }

    .logWKT {
        display: block;
        font-size: 0.75rem;
        margin-top: 0.375rem;

        &:before {
            content: 'WKT: ';
        }
    }
}

.errorProps {
    margin: 0.5rem 0 0 1rem;
    font-size: 0.75rem;
}

.value {
    display: table-row;

    &:before {
        display: table-cell;
        content: attr(data-var);
        padding-right: 1em;
        font-weight: bold;
        font-size: 0.9em;
    }
}


.geometryViewer {
    position: relative;
    width: 100%;
    height: 420px;

    &:fullscreen {
        .options {
            top: 0;
            left: 0;
            border-width: 0 1px 1px 0;
            border-radius: 0 0 var(--ifm-global-radius) 0;
        }

        .viewer {
            border-radius: 0;
            border: none;
        }

        .geometryViewerResizer {
            display: none;
        }
    }
}

.viewer {
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: relative;

    border: 1px solid var(--body-border-color);
    border-radius: var(--ifm-global-radius);
}

.canvas {
    width: 100%;
    height: 100%;
    cursor: crosshair;
    display: block;
}

.cursor_dot_white {
    cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'><circle cx='8' cy='8' r='2' fill='%23fff' /></svg>") 8 8, crosshair;
}

.cursor_dot_black {
    cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'><circle cx='8' cy='8' r='2' fill='%23000' /></svg>") 8 8, crosshair;
}

.cursor_donut_white {
    cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='32' height='32' viewBox='0 0 32 32'><circle cx='16' cy='16' r='8' fill='none' stroke='%23fff' stroke-width='2' /></svg>") 16 16, crosshair;
}

.cursor_donut_black {
    cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='32' height='32' viewBox='0 0 32 32'><circle cx='16' cy='16' r='8' fill='none' stroke='%23000' stroke-width='2' /></svg>") 16 16, crosshair;
}

.svg {
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    /* Grid & scales */

    :global(.domain) {
        display: none;
    }

    :global(.grid) {
        stroke: var(--grid-stroke);

        line {
            shape-rendering: crispEdges;
        }
    }

    :global(.tick) {
        line {
            shape-rendering: crispEdges;
            stroke-opacity: 0.5;
        }
    }

}


/* Options: pointer position indicator, view options */

.options {
    z-index: 1;
    display: block;
    padding: 0;

    &[open] {
        .expandCollapseIcon {
            stroke: currentColor;
            d: path('M12 12 L36 36 M12 36 L36 12');
        }

        .evalStatusIcon {
            fill: transparent;
        }
    }

    /* open/close transition: */

    &::details-content {
        opacity: 0;
        block-size: 0;
        overflow: clip;
        transition: content-visibility 0.2s allow-discrete, opacity 0.2s, block-size 0.2s;
        @media (prefers-reduced-motion: reduce) {
            transition: none !important;
        }
    }

    &[open]::details-content {
        opacity: 1;
        block-size: auto;
    }
}

.optionsBar {
    cursor: pointer;
    padding: 0.2rem 1rem 0.2rem 0.5rem;

    display: flex;
    align-items: center;
    gap: 0.5rem;

    [data-type] {
        display: block;
        min-width: 8ch;
        text-align: end;
    }

    [data-type='zoom'] {
        border-right: 1px solid var(--bar-border-color);
        padding-right: 0.5rem;
        min-width: 5.5ch;
    }

    &:is(:hover, :focus-visible) {
        .expandCollapseIcon {
            stroke: currentColor;
        }

        .evalStatusIcon {
            transform: scale(0);
        }
    }
}

.optionsBody {
    font-family: var(--ifm-font-family-base);

    line-height: 1.4;
    padding: 0.5rem 0.5rem 0.75rem;

    border-top: 1px solid var(--bar-border-color);

    display: flex;
    flex-direction: column;
}

.expandCollapseIcon {
    vector-effect: non-scaling-stroke;
    stroke: transparent;
    stroke-width: 2px;
    stroke-linejoin: round;
    stroke-linecap: round;
    fill: none;
    transition: d 0.2s ease-in-out, stroke 0.2s ease-in-out;
}

.pointerPosIndicator {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.evalStatusIcon {
    fill: currentColor;
    transition: fill 0.1s ease-in-out, transform 0.2s ease-in-out;
    transform-origin: 50% 75%;

    &.evalSuccess {
        fill: var(--ifm-color-success-lighter);
    }

    &.evalError {
        fill: var(--ifm-color-danger);
    }
}

.evalErrorDescription {
    display: flex;
    align-items: flex-start;
    flex-wrap: wrap;
    gap: 0.5em;
    line-height: 1.2;

    svg {
        height: 1.2em;

        circle {
            fill: var(--ifm-color-danger);
        }
    }
}

.checkboxLabel {
    display: flex;
    align-items: center;
    border-radius: 0.25rem;
    gap: 0.25rem;
    line-height: 1.4;
    user-select: none;

    &:is(:hover,:focus-within) {
        background-color: var(--ifm-menu-color-background-hover);
    }

    input[type='checkbox'] {
        accent-color: var(--ifm-color-primary);
    }
}

.selectLabel {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;

    select {
        border-radius: 0.25rem;
        padding: 0.125rem 0.25rem;
        background-color: var(--preview-background-color);
        color: var(--preview-color);
        font-size: inherit;
    }

    option {
        background-color: var(--preview-background-color);
        color: var(--preview-color);
    }
}

.horizontalSeparator {
    margin: 0.5rem 0;
    background-color: var(--bar-border-color);
    height: 1px;
}

.screenshotButton:after {
    color: rgb(from var(--preview-color) r g b / 65%);
    content: ' (dpr=' attr(data-dpr) ')';
}


/* Features list: list with features names */

.featureList {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;

    max-height: calc(100% - 1rem);
    max-width: calc(100% - 1rem);
    overflow: auto;
    scrollbar-width: thin;

    font: 0.75rem / 1 var(--ifm-font-family-monospace);

    background-color: var(--preview-background-color);
    color: var(--preview-color);
    border: 1px solid var(--preview-border-color);
    border-radius: var(--ifm-global-radius);

    padding: 0.25rem;

    :global(label.feature) {
        display: flex;
        align-items: flex-start;
        border-radius: 0.25rem;
        user-select: none;
        transition: background-color 0.1s ease-in-out;
        line-height: 19px;

        input[type='checkbox'] {
            accent-color: var(--ifm-color-primary);
        }

        span {
            padding: 0 0.25rem;

            &:after {
                color: rgb(from var(--preview-color) r g b / 65%);
                display: block;
                content: attr(data-type);
                font-size: 0.625rem;
                line-height: 1.2;
                transition: color 0.1s ease-in-out;
            }
        }

        &[data-status='empty'], &[data-status='detached'], &[data-status='error'] {
            span {
                color: rgb(from var(--preview-color) r g b / 65%);
            }
        }

        &[data-status='warn'] {
            span:before {
                content: '⚠️';
                padding-right: 0.25em;
            }
        }

        &[data-status='error'] {
            span:before {
                color: #000; /* to reset opacity */
                content: '💥';
                padding-right: 0.25em;
            }
        }

        &:has(input:not(:disabled)):is(:hover,:focus-within), &:global(.hover) {
            background-color: var(--hover-overlay-heavy);

            span:after {
                color: rgb(from var(--preview-color) r g b / 85%);
            }
        }
    }
}


/* Popup */

.featurePopupBoundary {
    overflow: hidden;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    pointer-events: none;
    border: 1px solid transparent;
}

.featurePopup {
    --tip-size: 6px;
    position: absolute;
    max-width: calc(100% - 1rem);

    transform: translate(-50%, calc(-100% - var(--tip-size)));

    background-color: var(--preview-background-color);
    color: var(--preview-color);
    border: 1px solid var(--preview-border-color);
    border-radius: var(--ifm-global-radius);

    pointer-events: auto;
    white-space: nowrap;
    padding: 0.5rem 0.75rem 1rem;

    &::before {
        content: "";
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translate(-50%, 50%) rotate(45deg);
        width: calc(sqrt(2) * var(--tip-size));
        height: calc(sqrt(2) * var(--tip-size));
        background-color: var(--preview-background-color);
        border: 1px solid var(--preview-border-color);
        border-color: transparent var(--preview-border-color) var(--preview-border-color) transparent;
        clip-path: polygon(70% 10%, 90% 10%, 100% 0, 100% 100%, 0 100%, 10% 90%, 10% 70%);
    }

    &.hidden {
        display: none;
    }

    .previewButton {
        font-size: 0.75rem;
        padding: 0.25rem 1rem;

        &:not(:first-of-type) {
            margin-top: 0.25rem;
        }
    }
}

.featurePopupHeader {
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;

    code {
        padding: 0 0.25em;
    }
}

.featurePopupId {
    font: 0.6875rem / var(--ifm-pre-line-height) var(--ifm-font-family-monospace);
    margin: 0.5rem 0 var(--ifm-list-item-margin) !important;
}

.featurePopupProperties {
    --body-background-color: var(--preview-background-color);
    margin: 1rem 0 var(--ifm-list-item-margin) !important;
}


/* Viewer resizer */

.geometryViewerResizer {
    cursor: ns-resize;
    border-top-width: 1px;
    padding-bottom: var(--resizer-area);
    bottom: calc(-1 * var(--resizer-area));
    left: var(--ifm-global-radius);
    right: var(--ifm-global-radius);
}


/* Other */

.previewButton {
    display: block;
    background: none;
    border: 1px solid var(--ifm-color-emphasis-300);
    border-radius: 0.25rem;
    color: var(--bar-color);
    text-align: start;
    font-family: inherit;
    font-size: inherit;
    font-weight: 500;
    line-height: 1.4;
    cursor: pointer;
    width: 100%;
    padding: 0.125rem 0.5rem;
    transition: background-color 0.1s ease-in-out, border-color 0.1s ease-in-out, color 0.1s ease-in-out;

    &:not(:first-of-type) {
        margin-top: 0.125rem;
    }

    &:is(:hover,:focus-within) {
        border: 1px solid var(--ifm-color-emphasis-500);
        background-color: var(--hover-overlay-light);
    }

    &[data-feedback='success'] {
        background-color: var(--ifm-color-success-contrast-background);
        border-color: var(--ifm-color-success-dark);
        color: var(--ifm-color-success-contrast-foreground);
    }
}
